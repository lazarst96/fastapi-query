name: Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
        pydantic-version: ["pydantic-v1", "pydantic-v2"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry Action
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --extras all

      - name: Install Pydantic v1
        if: matrix.pydantic-version == 'pydantic-v1'
        run: pip install "pydantic>=1.10.0,<2.0.0"

      - name: Install Pydantic v2
        if: matrix.pydantic-version == 'pydantic-v2'
        run: pip install "pydantic>=2.0.2,<3.0.0"

      - name: Run Tests
        run: |
          source .venv/bin/activate
          pytest tests -q
